# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Address {
  city: String!
  companies: [Company!]!
  country: String!
  createdAt: String!
  currentUsers: [User!]!
  deleted: Boolean!
  district: String!
  id: Float!
  permanentUsers: [User!]!
  street: String!
  updatedAt: String!
  ward: String!
  zip: String!
}

type BooleanResponse {
  error: FieldError
  status: Boolean!
}

type BooleanResponseWithType {
  data: Type
  error: FieldError
  status: Boolean!
}

type Category {
  createdAt: String!
  deleted: Boolean!
  id: Float!
  name: String!
  type: Type!
  updatedAt: String!
  user: [User!]!
}

input CategoryArgs {
  name: String!
  type: Float!
}

type Company {
  branches: [Float!]!
  createdAt: String!
  deleted: Boolean!
  email: String!
  employees: [Employee!]!
  id: Float!
  isBranch: Boolean!
  isParent: Boolean!
  location: Address!
  logo: String!
  name: String!
  parentId: String!
  phone: String!
  poBox: String!
  registrationNumber: String!
  status: String!
  tinNumber: String!
  updatedAt: String!
  website: String!
}

input EditUserArgs {
  email: String!
  firstname: String!
  lastname: String!
  middlename: String!
  phone: String!
}

input EmailPasswordArgs {
  email: String!
  password: String!
}

type Employee {
  accountNumber: String!
  checkNumber: String!
  company: Company!
  contractEndDate: String!
  contractStartDate: String!
  createdAt: String!
  deleted: Boolean!
  department: String!
  departmentLocation: String!
  designation: String!
  educationLevel: String!
  employeeId: String!
  employmentType: String!
  id: Float!
  image: String!
  nhifRank: String!
  pfNumber: String!
  role: String!
  signature: String!
  status: String!
  updatedAt: String!
}

type FieldError {
  message: String!
  target: String!
}

type Mutation {
  addCategory(args: CategoryArgs!): BooleanResponse!
  addPermission(name: String!): BooleanResponse!
  addRole(args: RoleArgs!): BooleanResponse!
  addType(args: TypeArgs!): BooleanResponseWithType!
  deleteCategory(id: Float!): BooleanResponse!
  deletePermission(id: Float!): BooleanResponse!
  deleteRole(id: Float!): BooleanResponse!
  deleteType(id: Float!): BooleanResponse!
  editCategory(args: CategoryArgs!, id: Float!): BooleanResponse!
  editPermission(id: Float!, name: String!): BooleanResponse!
  editRole(args: RoleArgs!, id: Float!): BooleanResponse!
  editType(args: TypeEditArgs!, id: Float!): BooleanResponse!
  editUser(id: Float!, params: EditUserArgs!): BooleanResponse!
  forgotPassword(email: String!): BooleanResponse!
  login(params: EmailPasswordArgs!): UserResponse!
  logout: Boolean!
  manageUserPermissions(id: Float!, permissions: [Float!]!): BooleanResponse!
  register(params: RegisterUserArgs!): BooleanResponse!
  resetPassword(newPassword: String!, token: String!): UserResponse!
}

type Permission {
  createdAt: String!
  deleted: Boolean!
  id: Float!
  name: String!
  roles: [Role!]!
  updatedAt: String!
  users: [User!]!
}

type Query {
  getAllCategories: [Category!]!
  getCategories(type: Float!): [Category!]!
  getPermissions: [Permission!]!
  getRoles: [Role!]!
  getType(id: Float!): Type
  getTypes: [Type!]!
  getUser(id: Float!): User
  getUsers(roles: [Float!]): [User!]!
  me: User
}

input RegisterUserArgs {
  email: String!
  firstname: String!
  lastname: String!
  middlename: String!
  password: String!
  phone: String!
}

type Role {
  createdAt: String!
  deleted: Boolean!
  id: Float!
  name: String!
  permissions: [Permission!]!
  updatedAt: String!
  users: [User!]!
}

input RoleArgs {
  name: String!
  permissions: [Float!]!
}

type Type {
  category: [Category!]!
  createdAt: String!
  deleted: Boolean!
  description: String!
  id: Float!
  name: String!
  updatedAt: String!
}

input TypeArgs {
  description: String!
  name: String!
}

input TypeEditArgs {
  categories: [String!]!
  description: String!
  name: String!
}

type User {
  createdAt: String!
  currentAddress: Address!
  dateOfBirth: String!
  deleted: Boolean!
  email: String!
  firstname: String!
  gender: String!
  id: Float!
  lastname: String!
  middlename: String!
  permanentAddress: Address!
  permissions: [Permission!]!
  phone: String!
  role: Role!
  status: [Category!]!
  updatedAt: String!
}

type UserResponse {
  error: FieldError
  user: User
}
